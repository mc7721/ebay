{
    "id": "4fbb5f051716288bc273c4b0240e8d48",
    "name": "API to View & Search for Items",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "a2117bc44d310180432f2ef41734da22",
            "name": "",
            "url": "http:\/\/api.ebay.com\/buy\/browse\/v1\/item\/get_item_by_legacy_id",
            "description": "This call is a bridge between the eBay legacy APIs, such as Trading, Shopping, and Finding and the eBay Buy APIs. There are differences between how legacy APIs and RESTful APIs return the identifier of an &quot;item&quot;. There is also a difference in what the item Id represents and in the format of the item Id value returned. This call lets you use the legacy item Ids retrieve the details of a specific item, such as description, price, and other information the buyer needs to make a purchasing",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "legacy_item_id",
                    "description": "Specifies either: The legacy item Id of an item that is not part of a group. The legacy item Id of a group, which would be the group parent Id. Note: If you pass in a group Id, you must also use the legacy_variation_id field and pass in the legacy Id of the specific item variation (child Id). Legacy Ids are returned by eBay traditional APIs, such as the Trading API or Finding API. The following is an example of using the value of the ItemID field for a specific item from Trading to get the RESTf",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "legacy_variation_id",
                    "description": "Specifies the legacy item Id of a specific item in an item group. Legacy Ids are returned by eBay traditional APIs, such as the Trading API or Finding API. Maximum: 1 Requirement: You must always pass in the legacy_item_id with the legacy_variation_id",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "legacy_variation_sku",
                    "description": "Specifics the legacy SKU of the item. Legacy SKUs are returned by eBay traditional APIs, such as the Trading API or Finding API. The following is an example of using the value of the ItemID and SKU fields, which were returned by the Trading API, to get the RESTful itemId value. &nbsp;&nbsp;&nbsp; browse\/v1\/item\/get_item_by_legacy_id?legacy_item_id=110039490209&amp;legacy_variation_sku=V-00031-WHM Maximum: 1 Requirement: You must always pass in the legacy_item_id with the legacy_variation_sku",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "4fbb5f051716288bc273c4b0240e8d48",
            "rawModeData": ""
        },
        {
            "id": "bf8738c8d218d85a5bdc8be5f872ffb7",
            "name": "",
            "url": "http:\/\/api.ebay.com\/buy\/browse\/v1\/item\/get_items_by_item_group",
            "description": "This call retrieves the details of the individual items in an item group. You pass in the item group Id as a URI parameter. You use this call to show the item details of items with multiple aspects, such as color, size, storage capacity, etc. This call returns two main containers; items and commonDescriptions. The items container has an array of containers with the details of each item in the group. The commonDescriptions container has an array of containers for a description and the item Ids of",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "item_group_id",
                    "description": "Identifier of the item group to return. This Id is returned in the itemGroupHref field of the search and getItem calls. For Example: https:\/\/api.ebay.com\/buy\/browse\/v1\/item\/get_items_by_item_group?item_group_id=351825690866",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "4fbb5f051716288bc273c4b0240e8d48",
            "rawModeData": ""
        },
        {
            "id": "991adc98d5ab1fcdd528b471f53e1a6d",
            "name": "",
            "url": "http:\/\/api.ebay.com\/buy\/browse\/v1\/item\/{item_id}",
            "description": "This call retrieves the details of a specific item, such as description, price, category, all item aspects, condition, return policies, seller feedback and score, shipping options, shipping costs, estimated delivery, and other information the buyer needs to make a purchasing decision. The Buy APIs are designed to let you create an off-eBay shopping experience, which means you will need to know when something, such as the price, quantity, etc., has changed in any eBay item you are offering. You c",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "fieldgroups",
                    "description": "This field lets you control what is returned in the response. If you do not set this field, the call returns all the details of the item. Note: Currently the only value supported is COMPACT. Valid values: COMPACT - This returns the following fields, which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item's top-rated plus status has changed for items you have stored. itemId - The identifier of the item. sellerItem",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "item_id",
                    "description": "The eBay identifier of an item. This Id is returned by the Browse and Feed API calls. The Id must be in RESTful item Id format. For example: v1|262446562346|561248611424 or v1|112330214619|0. For more information about item Id for RESTful APIs, see the Legacy API compatibility section of the Buy APIs Overview.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "4fbb5f051716288bc273c4b0240e8d48",
            "rawModeData": ""
        },
        {
            "id": "b011d9e9759bda437d2185a91b13908a",
            "name": "",
            "url": "http:\/\/api.ebay.com\/buy\/browse\/v1\/item_summary\/search",
            "description": "This call performs an advanced search for items. You can search by keyword, category, eBay product Id (EPID), or gtin. Or a combination of these. Note: As with all query parameter values, the fields parameter value must be URL encoded. For better readability, the examples in this document omit the encoding. For example: &nbsp;&nbsp;search?q=world cup soccer ball&amp;aspect_filter=categoryId:20863,Brand:{Nike|Wilson} Encoded example: &nbsp;&nbsp; search?q=world cup soccer ball&amp;aspect_filter=c",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "aspect_filter",
                    "description": "The aspect name\/value pairs and category, which is required, to use to limit the results. For example, in a clothing category one aspect pair would be Color\/Red. For example, the call below uses the category Id for Women's Clothing. This will return only items for a woman's red shirt. \/buy\/browse\/v1\/item_summary\/search?q=shirt&amp;aspect_filter=categoryId:15724,Color:{Red} To get a list of the aspects pairs and the category, which is returned in the dominantCategoryId field, set fieldgroups to A",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "category_ids",
                    "description": "The category Ids to use to limit the results. This field can have one category Id or a comma separated list of Ids. For example: &nbsp;&nbsp;&nbsp;GET https:\/\/api.ebay.com\/buy\/browse\/v1\/item_summary\/search?category_ids=29792 Note: Currently, you can pass in only one category Id. You can also use any combination of the category_Ids, epid, and q fields. This gives you additional control over the result set. For example, let's say you are looking of a toy phone. If you search for &quot;phone&quot;,",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "epid",
                    "description": "The EPID is the eBay product identifier of a product from the eBay product catalog. Only items in the specified EPID are returned. The Marketing API getMerchandisedProducts call and the getItem, getItemByLegacyId, and getItemsByItemGroup calls return the EPID of the product. &nbsp;&nbsp;&nbsp;\/buy\/browse\/v1\/item_summary\/search?epid:{15032} Maximum: 1 Required: The call must have category_ids, epid, gtin, or q (or any combination of these)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "fieldgroups",
                    "description": "This field lets you control what is returned in the response. If you do not set this field, the call returns all the details of the item. Note: Currently the only value supported is COMPACT. Valid values: COMPACT - This returns the following fields, which let you quickly check if the availability or price of the item has changed, if the item has been revised by the seller, or if an item's top-rated plus status has changed for items you have stored. itemId - The identifier of the item. sellerItem",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter",
                    "description": "This field supports multiple field filters that can be used to use to limit\/customize the result set. For example: &nbsp;&nbsp;&nbsp;GET https:\/\/api.ebay.com\/buy\/browse\/v1\/item_summary\/search?q=shirt&amp;filter=price:[10..50] You can also combine filters. &nbsp;&nbsp;&nbsp;GET https:\/\/api.ebay.com\/buy\/browse\/v1\/item_summary\/search?q=shirt&amp;filter=price:[10..50],sellers:{rpseller|bigSal} The following are the supported filters. For details and examples for all the filters, see search Call Fiel",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "gtin",
                    "description": "This field lets you search by GTIN (other Global Trade Item Number) or UPC (Universal Product Code) value. &nbsp;&nbsp;&nbsp;\/buy\/browse\/v1\/item_summary\/search?gtin:{099482432621} Maximum: 1 Required: The call must have category_ids, epid, gtin, or q (or any combination of these)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "limit",
                    "description": "The number of items in a result set. Default: 50 Maximum per result set: 200 Maximum number of items returned: 10,000",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "offset",
                    "description": "The number of items to skip in the result set. This is used with the limit field to control the pagination of the output. If offset is 0 and limit is 10, the call will retrieve items 1-10 from the list of items returned, if offset is 10 and limit is 10, the call will retrieve items 11 thru 20 from the list of items returned. Default: 0",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "q",
                    "description": "A string consisting of one or more words that are used for a search of items on eBay. For example: &quot;iphone&quot; or &quot;Harry Potter&quot;. When keywords are separated by a comma, the comma is ignored. So a keyword of &quot;iphone, ipad&quot; is the same as using &quot;iphone ipad&quot;. Both queries return items that have iphone or ipad. Restriction: The * wildcard character is not allowed in this field. Required: The call must have category_ids, epid, gtin, or q (or any combination of t",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort",
                    "description": "Specifies the order and the field name to use to sort the items. To sort in descending order use - before the field name. Currently, you can only sort by price (in ascending or descending order), or by distance (only applicable if the &quot;pickup&quot; filters are used, and only ascending order is supported). If no sort parameter is submitted, the result set is sorted by &quot;Best Match&quot;. The following are examples of using the sort query parameter. Sort Result &amp;sort=price Sorts by pr",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "4fbb5f051716288bc273c4b0240e8d48",
            "rawModeData": ""
        }
    ]
}