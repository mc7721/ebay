{
    "openapi": "3.0.0",
    "info": {
        "version": "1.0.0",
        "title": "Compliance API",
        "description": "API for providing the compliance violations of seller account\/listings",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "http:\/\/api.ebay.com\/sell\/compliance\/v1"
    ],
    "paths": {
        "\/listing_violation_summary": {
            "get": {
                "summary": "getListingViolationsSummary",
                "description": "This call returns listing violation counts for a seller. A user can pass in one or more compliance types through the compliance_type query parameter. Listing violations are returned for multiple marketplaces if the seller sells on multiple eBay marketplaces. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a seller will be able to discover which active listings need to be revised with an eBay catalog product or pr",
                "operationId": "GetListingViolationsSummary",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "compliance_type",
                        "in": "query",
                        "description": "A user passes in one or more compliance type values through this query parameter. See ComplianceTypeEnum for more information on the compliance types that can be passed in here. If more than one compliance type values is used, delimit these values with a comma. If no compliance type values are passed in, the listing count for all compliance types will be returned. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json;charset=UTF-8": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ComplianceSummary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/listing_violation": {
            "get": {
                "summary": "getListingViolations",
                "description": "This call returns specific listing violations for a seller. The seller can either retrieve all listing violations of a specific compliance type, or they can pass in a specific listing ID, and all listing violations applicable to this listing are returned. This call also has pagination control. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a seller will be able to discover which active listings need to be revise",
                "operationId": "GetListingViolations",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "compliance_type",
                        "in": "query",
                        "description": "A user passes in one or more compliance type values through this query parameter. See ComplianceTypeEnum for more information on the compliance types that can be passed in here. If more than one compliance type values is used, delimit these values with a comma. If no compliance type values are passed in, the listing count for all compliance types will be returned. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The first policy violation to return based on its position in the collection of listing violations. Use this parameter in conjunction with the limit parameter to control the pagination of the output. For example, if offset is set to 10 and limit is set to 10, the call retrieves listing violations 11 thru 20 from the resulting collection of listing violations. Note: This feature employs a zero-based list, where the first item in the list has an offset of 0. If the listing_id parameter is included"
                    },
                    {
                        "name": "listing_id",
                        "in": "query",
                        "description": "Note: This query parameter is for future use, and will not be supported for the initial release of Compliance API. This query parameter is used if the user wants to view all listing violations for one or more eBay listings. The string value passed into this field is the unique identifier of the listing, sometimes referred to as the Item ID. If this query parameter is used, all other query parameters (if provided) are ignored. Either the listing_id or a compliance_type query parameter must be use"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "This query parameter is used if the user wants to set a limit on the number of listing violations that are returned in the current result set. This parameter is used in conjunction with the offset parameter to control the pagination of the output. For example, if offset is set to 10 and limit is set to 10, the call retrieves listing violations 11 thru 20 from the collection of listing violations that match the value set in the compliance_type parameter. Note: This feature employs a zero-based li"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json;charset=UTF-8": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ComplianceSummary"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ComplianceSummaryInfo": {
                "type": "object",
                "properties": {
                    "complianceType": {
                        "description": "This enumeration value indicates the type of compliance. See ComplianceTypeEnum for more information on each compliance type. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a seller will be able to discover which active listings (or variations within a multiple-variation listing) need to be revised with an eBay catalog prodoct and\/or a product identifier value. For implementation help, refer to <a href='https:\/\/developer.ebay.com\/devzone\/rest\/api-ref\/compliance\/types\/ComplianceTypeEnum.html'>eBay API documentation<\/a>",
                        "type": "string"
                    },
                    "marketplaceId": {
                        "description": "This enumeration value indicates the eBay marketplace where the listing violations are occurring. For implementation help, refer to <a href='https:\/\/developer.ebay.com\/devzone\/rest\/api-ref\/compliance\/types\/MarketplaceIdEnum.html'>eBay API documentation<\/a>",
                        "type": "string"
                    },
                    "listingCount": {
                        "description": "This integer value indicates the number of eBay listings that are currently violating the compliance type indicated in the complianceType field for the eBay marketplace indicated in the marketplaceId field. If there are no listing violations for the corresponding compliance type, 0 will be returned.",
                        "type": "integer"
                    }
                }
            },
            "ComplianceViolation": {
                "type": "object",
                "properties": {
                    "complianceType": {
                        "description": "This enumeration value indicates the type of compliance. See ComplianceTypeEnum for more information on each compliance type. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a seller will be able to discover which active listings (or variations within a multiple-variation listing) need to be revised with an eBay catalog prodoct and\/or a product identifier value. For implementation help, refer to <a href='https:\/\/developer.ebay.com\/devzone\/rest\/api-ref\/compliance\/types\/ComplianceTypeEnum.html'>eBay API documentation<\/a>",
                        "type": "string"
                    },
                    "listingId": {
                        "description": "The unique identifier of the eBay listing that currently has the corresponding listing violation(s). This will always be returned for each listing that has one or more violations.",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The seller-defined SKU value of the product in the listing with the violation(s). This field is only returned if defined in the listing. SKU values are optional in listings except when creating listings using the Inventory API.",
                        "type": "string"
                    },
                    "offerId": {
                        "description": "Note: This field is not supported with the initial release of the Compliance API, and will not be returned. The unique identifier of the offer. This field is only applicable and returned for listings that were created through the Inventory API. To convert an Inventory Item object into an eBay listing, an Offer object must be created and published",
                        "type": "string"
                    },
                    "violations": {
                        "description": "This container consists of an array of one or more listing violations applicable to the eBay listing specified in the listingId field. This array is returned for each eBay listing that has one or more violations.",
                        "type": "array"
                    }
                }
            },
            "violations": {
                "type": "array"
            },
            "ComplianceSummary": {
                "type": "object",
                "properties": {
                    "violationSummaries": {
                        "description": "This container is an array of one or more policy violation counts. A policy violation count is returned for each unique eBay marketplace and compliance type violation. Note: For the initial release of Compliance API, the only supported compliance type is PRODUCT_ADOPTION. With this compliance type, a seller will be able to discover which active listings need to be revised with an eBay catalog prodoct or product identifier.",
                        "type": "array"
                    }
                }
            },
            "violationSummaries": {
                "type": "array"
            },
            "PagedComplianceViolationCollection": {
                "type": "object",
                "properties": {
                    "offset": {
                        "description": "The distance (number of records) from the first policy violation in the collection to the first policy violation in this result set. In the call request, you can use the offset parameter in conjunction with the limit parameter to control the pagination of the output. For example, if offset is set to 30 and limit is set to 10, the call retrieves policy violations 31 thru 40 from the resulting collection of policy violations. Note: This feature employs a zero-based list, where the first item in the list has an offset of 0. Default: 0 (zero)",
                        "type": "integer"
                    },
                    "href": {
                        "description": "The URI of the getListingViolations call request that produced this result set.",
                        "type": "string"
                    },
                    "total": {
                        "description": "The total number of policy violations in the collection. Note: If no policy violations are found, this field is returned with a value of 0.",
                        "type": "integer"
                    },
                    "next": {
                        "description": "The getListingViolations call URI for the next result set. For example, the following URI returns policy violations 41 thru 50 from the collection of policy violations: path\/listing_violation?limit=10&amp;offset=40 This field is only returned if an additional page of listing violations exists.",
                        "type": "string"
                    },
                    "prev": {
                        "description": "The getListingViolations call URI for the previous result set. For example, the following URI returns policy violations 21 thru 30 from the collection of policy violations: path\/listing_violation?limit=10&amp;offset=20 Note: This feature employs a zero-based list, where the first policy violation in the list has an offset of 0. This field is only returned if a previous page of listing violations exists.",
                        "type": "string"
                    },
                    "limit": {
                        "description": "The maximum number of policy violations returned in the current result set. Note: If this is the last or only result set in the collection, it may contain fewer listing violations. To determine the number of result sets in the collection, divide this into the value of total and round up to the next integer. Default: 50 Max: 200",
                        "type": "integer"
                    },
                    "listingViolations": {
                        "description": "An array of listing violations that match the criteria in the call request, including pagination control (if set). An empty array is returned if no listing violations are found.",
                        "type": "array"
                    }
                }
            },
            "listingViolations": {
                "type": "array"
            },
            "VariationDetails": {
                "type": "object",
                "properties": {
                    "sku": {
                        "description": "The seller-defined SKU value of the product in the listing with the violation(s). This field is only returned if defined in the listing. SKU values are optional in listings except when creating listings using the Inventory API.",
                        "type": "string"
                    },
                    "variationAspects": {
                        "description": "An array of one or more variation aspects that define a variation within a multiple variation listing. The aspect(s) returned here define the individual variation because these aspects will differ for each variation. Common varying aspects include color and size.",
                        "type": "array"
                    }
                }
            },
            "variationAspects": {
                "type": "array"
            },
            "ComplianceDetail": {
                "type": "object",
                "properties": {
                    "reasonCode": {
                        "description": "This value states the nature of the listing violation. Each compliance type has one or more reason codes. See the Revising Non-Compliant Listings topic in the Product-Based Shopping Experience Playbook for information on revising non-compliant listings based on the PRODUCT_ADOPTION reason code that is received. A reasonCode value is returned for each listing violation.",
                        "type": "string"
                    },
                    "message": {
                        "description": "This field provides a textual summary of the listing violation. A message field is returned for each listing violation.",
                        "type": "string"
                    },
                    "VariationDetails": {
                        "description": "",
                        "type": "object"
                    },
                    "variation": {
                        "description": "",
                        "type": ""
                    },
                    "violationData": {
                        "description": "Note: This container is for future use, and will not be applicable for the initial release of Compliance API. This container provides more information about the listing violation if applicable. The type of information that appears here will vary based on the compliance type and type of violation.",
                        "type": "array"
                    }
                }
            },
            "violationData": {
                "type": "array"
            },
            "NameValueList": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The category of information is returned in this field. The type of information that appears here will vary based on the compliance type and type of violation.",
                        "type": "string"
                    },
                    "value": {
                        "description": "This value corresponds to violation category returned in the corresponding name field.",
                        "type": "string"
                    }
                }
            }
        }
    }
}